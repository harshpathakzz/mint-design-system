name: Lint Check

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v19

      - name: Filter JavaScript/TypeScript changed files
        id: js-ts-files
        run: |
          js_ts_files=""
          IFS=$'\n'
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.js || $file == *.jsx || $file == *.ts || $file == *.tsx ]]; then
              js_ts_files="${js_ts_files} ${file}"
            fi
          done
          echo "js_ts_files=${js_ts_files}" >> $GITHUB_OUTPUT

      - name: Filter CSS/SCSS/SASS changed files
        id: css-files
        run: |
          css_files=""
          IFS=$'\n'
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.css || $file == *.scss || $file == *.sass ]]; then
              css_files="${css_files} ${file}"
            fi
          done
          echo "css_files=${css_files}" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile=false

      - if: steps.js-ts-files.outputs.js_ts_files != ''
        name: Run ESLint
        run: |
          echo "Linting JavaScript/TypeScript files: ${{ steps.js-ts-files.outputs.js_ts_files }}"
          pnpm eslint ${{ steps.js-ts-files.outputs.js_ts_files }} --max-warnings=0

      - if: steps.css-files.outputs.css_files != ''
        name: Run Stylelint
        run: |
          echo "Linting CSS/SCSS/SASS files: ${{ steps.css-files.outputs.css_files }}"
          pnpm stylelint ${{ steps.css-files.outputs.css_files }}
